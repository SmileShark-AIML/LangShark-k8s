name: Build and Push to ECR

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 663739179764.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: langshark-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate image tag
        id: gen-tag
        run: echo "::set-output name=IMAGE_TAG::$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set working directory
        run: cd $GITHUB_WORKSPACE

      - name: Generate Prisma Client
        run: |
          npm install
          npx prisma generate

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          NEXT_PUBLIC_LANGFUSE_CLOUD_REGION: ${{ secrets.NEXT_PUBLIC_LANGFUSE_CLOUD_REGION }}
          IMAGE_TAG: ${{ steps.gen-tag.outputs.IMAGE_TAG }}
        run: |
          docker buildx build --platform linux/amd64 \
            --build-arg NEXT_PUBLIC_LANGFUSE_CLOUD_REGION=${NEXT_PUBLIC_LANGFUSE_CLOUD_REGION} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -f ./web/Dockerfile . \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --push

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Print image tag
        run: echo "Image pushed with tag ${{ steps.gen-tag.outputs.IMAGE_TAG }}"
